{
  "openapi": "3.1.0",
  "info": {
    "title": "The_Colonel Tool Server",
    "description": "Individual tools for code execution, file operations, and computer control",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8264",
      "description": "Local server (no authentication required)"
    },
    {
      "url": "http://0.0.0.0:8264",
      "description": "Remote server (authentication recommended)"
    }
  ],
  "paths": {
    "/v1/models": {
      "get": {
        "summary": "List Models",
        "description": "List available models",
        "operationId": "list_models",
        "responses": {
          "200": {
            "description": "List of available models",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "enum": ["list"]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {"type": "string"},
                          "object": {"type": "string"},
                          "created": {"type": "integer"},
                          "owned_by": {"type": "string"}
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/completions": {
      "post": {
        "summary": "Create Chat Completion",
        "description": "OpenAI-compatible chat endpoint with profile selection for Open WebUI",
        "operationId": "create_chat_completion",
        "parameters": [
          {
            "name": "profile",
            "in": "query",
            "description": "Profile name from the profiles folder (defaults to default profile)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatCompletionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful chat completion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCompletionResponse"
                }
              },
              "text/event-stream": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "choices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "delta": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {}
        ]
      }
    },
    "/v1/tools/execute/python": {
      "post": {
        "summary": "Python Code Executor",
        "description": "Execute Python code locally with full interpreter capabilities and return the output",
        "operationId": "python_executor",
        "tags": ["Code Execution", "Python"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Python code to execute"
                  }
                },
                "required": ["code"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Execution result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "output": {
                      "type": "string",
                      "description": "Execution output"
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Error message, if any"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {}
        ]
      }
    },
    "/v1/tools/execute/shell": {
      "post": {
        "summary": "Shell Command Executor",
        "description": "Execute shell/bash commands locally and return the output",
        "operationId": "shell_executor",
        "tags": ["Code Execution", "Shell"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "description": "Shell command to execute"
                  }
                },
                "required": ["command"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Execution result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "output": {
                      "type": "string",
                      "description": "Command output"
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Error message, if any"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {}
        ]
      }
    },
    "/v1/tools/files/read": {
      "post": {
        "summary": "File Reader",
        "description": "Read the contents of any file from the local filesystem",
        "operationId": "file_reader",
        "tags": ["File Management"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "File path to read"
                  }
                },
                "required": ["path"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "File contents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string",
                      "description": "File contents"
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Error message, if any"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {}
        ]
      }
    },
    "/v1/tools/files/write": {
      "post": {
        "summary": "File Writer",
        "description": "Write or create files with specified content to the local filesystem",
        "operationId": "file_writer",
        "tags": ["File Management"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "File path to write to"
                  },
                  "content": {
                    "type": "string",
                    "description": "Content to write"
                  }
                },
                "required": ["path", "content"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Write result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the write was successful"
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Error message, if any"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {}
        ]
      }
    },
    "/v1/tools/files/upload": {
      "post": {
        "summary": "File Uploader",
        "description": "Upload files to the server and get metadata including file paths",
        "operationId": "file_uploader",
        "tags": ["File Management"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File to upload"
                  }
                },
                "required": ["file"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "File upload result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file_id": {
                      "type": "string",
                      "description": "Unique identifier for the uploaded file"
                    },
                    "filename": {
                      "type": "string",
                      "description": "Name of the uploaded file"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "File metadata (e.g., size, type)"
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Error message, if any"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {}
        ]
      }
    },
    "/v1/tools/computer/screenshot": {
      "post": {
        "summary": "Screenshot Capture",
        "description": "Capture a screenshot of the current desktop or active window",
        "operationId": "screenshot_capture",
        "tags": ["Automation", "Computer Control"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Screenshot result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "output": {
                      "type": "string",
                      "description": "Screenshot output or base64 image"
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Error message, if any"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {}
        ]
      }
    },
    "/v1/tools/computer/click": {
      "post": {
        "summary": "Mouse Click",
        "description": "Perform mouse clicks at specific screen coordinates for automation",
        "operationId": "mouse_click",
        "tags": ["Automation", "Computer Control"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "integer",
                    "description": "X coordinate"
                  },
                  "y": {
                    "type": "integer",
                    "description": "Y coordinate"
                  }
                },
                "required": ["x", "y"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Click result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "output": {
                      "type": "string",
                      "description": "Click operation result"
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Error message, if any"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {}
        ]
      }
    },
    "/v1/tools/computer/type": {
      "post": {
        "summary": "Keyboard Input",
        "description": "Send keyboard text input to the currently focused application",
        "operationId": "keyboard_input",
        "tags": ["Automation", "Computer Control"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Text to type"
                  }
                },
                "required": ["text"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Type result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "output": {
                      "type": "string",
                      "description": "Type operation result"
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Error message, if any"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {}
        ]
      }
    },
    "/v1/tools/computer/key": {
      "post": {
        "summary": "Key Press",
        "description": "Send key presses and keyboard shortcuts to the system",
        "operationId": "key_press",
        "tags": ["Automation", "Computer Control"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Key or key combination to press (e.g., 'enter', 'ctrl+c')"
                  }
                },
                "required": ["key"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Key press result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "output": {
                      "type": "string",
                      "description": "Key press operation result"
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Error message, if any"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {}
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ChatCompletionRequest": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "default": "the-colonel",
            "description": "Model identifier"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatMessage"
            },
            "description": "List of messages in the conversation"
          },
          "max_tokens": {
            "type": "integer",
            "nullable": true,
            "description": "Maximum tokens to generate"
          },
          "temperature": {
            "type": "number",
            "nullable": true,
            "description": "Sampling temperature"
          },
          "stream": {
            "type": "boolean",
            "default": false,
            "description": "Whether to stream the response"
          }
        },
        "required": ["messages"]
      },
      "ChatMessage": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": ["user", "assistant", "system"],
            "description": "Role of the message sender"
          },
          "content": {
            "type": "string",
            "description": "Message content"
          }
        },
        "required": ["role", "content"]
      },
      "ChatCompletionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the completion"
          },
          "object": {
            "type": "string",
            "enum": ["chat.completion"],
            "description": "Object type"
          },
          "created": {
            "type": "integer",
            "description": "Timestamp of creation"
          },
          "model": {
            "type": "string",
            "description": "Model used"
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "$ref": "#/components/schemas/ChatMessage"
                },
                "index": {
                  "type": "integer",
                  "description": "Index of the choice"
                },
                "finish_reason": {
                  "type": "string",
                  "enum": ["stop", "length", "error"],
                  "description": "Reason for completion end"
                }
              }
            },
            "description": "List of completion choices"
          }
        },
        "required": ["id", "object", "created", "model", "choices"]
      },
      "HTTPValidationError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "description": "List of validation errors"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Location of the error"
          },
          "msg": {
            "type": "string",
            "description": "Error message"
          },
          "type": {
            "type": "string",
            "description": "Error type"
          }
        },
        "required": ["loc", "msg", "type"]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Bearer token for authentication (optional for localhost, required for 0.0.0.0)"
      }
    }
  }
}